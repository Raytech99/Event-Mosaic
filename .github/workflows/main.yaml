name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          node-version: "23.10.0"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      # Frontend build
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      # Backend build
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

      # Deploy using SSH key
      - name: Deploy to DigitalOcean
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        run: |
          # Setup SSH
          echo "$SSH_KEY" > deploy_key
          chmod 600 deploy_key

          # Deploy frontend
          echo "Deploying frontend..."
          ssh -i deploy_key -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST 'rm -rf /var/www/html/*'
          scp -i deploy_key -r frontend/dist/* $SSH_USERNAME@$SSH_HOST:/var/www/html/

          # Deploy backend
          echo "Deploying backend..."
          ssh -i deploy_key -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST 'mkdir -p /var/emServer/src'
          scp -i deploy_key -r backend/src/* $SSH_USERNAME@$SSH_HOST:/var/emServer/src/
          scp -i deploy_key backend/package*.json $SSH_USERNAME@$SSH_HOST:/var/emServer/

          # Install dependencies and restart backend
          ssh -i deploy_key -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST '
            cd /var/emServer && \
            npm install && \
            pm2 restart express-server || pm2 start src/server.js --name "express-server" && \
            pm2 save
          '
